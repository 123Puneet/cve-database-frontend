document.addEventListener('DOMContentLoaded', function() {
  const addCveModal = document.getElementById('addCveModal');
  const addCveBtn = document.getElementById('addCveBtn');
  const closeBtn = document.querySelector('.close');
  const cancelBtn = document.querySelector('.cancel');
  const addCveForm = document.getElementById('addCveForm');
  const cveTableBody = document.getElementById('cveTableBody');
  
  const editCveModal = document.getElementById('editCveModal');
  const editCveForm = document.getElementById('editCveForm');
  const editCveIdInput = document.getElementById('editCveIdInput');
  const editSeverityInput = document.getElementById('editSeverityInput');
  const editCvssInput = document.getElementById('editCvssInput');
  const editAffectedPackagesInput = document.getElementById('editAffectedPackagesInput');
  const editCweIdInput = document.getElementById('editCweIdInput');

  // Function to load CVE records from localStorage
  function loadCveRecords() {
    return JSON.parse(localStorage.getItem('cveRecords')) || [];
  }

  // Function to save CVE records to localStorage
  function saveCveRecords(records) {
    localStorage.setItem('cveRecords', JSON.stringify(records));
  }

  // Show add CVE modal
  addCveBtn.addEventListener('click', function() {
    addCveModal.style.display = 'block';
  });

  // Close modal when close button is clicked
  closeBtn.addEventListener('click', function() {
    addCveModal.style.display = 'none';
  });

  // Close modal when cancel button is clicked
  cancelBtn.addEventListener('click', function() {
    addCveModal.style.display = 'none';
  });

  // Function to append a new CVE record to the table and save to localStorage
  function appendAndSaveCveRecord(record) {
    const newRow = document.createElement('tr');
    newRow.innerHTML = `
      <td>${record.cveId}</td>
      <td>${record.severity}</td>
      <td>${record.cvss}</td>
      <td>${record.affectedPackages}</td>
      <td>${record.cweId}</td>
      <td>
        <button class="edit btn">Edit</button>
        <button class="delete btn">Delete</button>
      </td>
    `;
    cveTableBody.appendChild(newRow);

    // Save to localStorage
    const existingRecords = loadCveRecords();
    existingRecords.push(record);
    saveCveRecords(existingRecords);
  }

  // Add CVE record
  addCveForm.addEventListener('submit', function(e) {
    e.preventDefault();
    // Retrieve form inputs
    const cveId = document.getElementById('cveIdInput').value;
    const severity = document.getElementById('severityInput').value;
    const cvss = document.getElementById('cvssInput').value;
    const affectedPackages = document.getElementById('affectedPackagesInput').value;
    const cweId = document.getElementById('cweIdInput').value;

    // Append new row to CVE table and save to localStorage
    appendAndSaveCveRecord({ cveId, severity, cvss, affectedPackages, cweId });

    // Clear form inputs
    addCveForm.reset();
    // Close modal
    addCveModal.style.display = 'none';
  });

  // Delete CVE record
  cveTableBody.addEventListener('click', function(e) {
    if (e.target.classList.contains('delete')) {
      if (confirm('Are you sure you want to delete this CVE record?')) {
        const row = e.target.parentElement.parentElement;
        const cveIdToDelete = row.querySelector('td:first-child').textContent;

        // Remove from table and update localStorage
        row.remove();
        const existingRecords = loadCveRecords();
        const updatedRecords = existingRecords.filter(record => record.cveId !== cveIdToDelete);
        saveCveRecords(updatedRecords);
      }
    }
  });

  // Edit CVE record
  cveTableBody.addEventListener('click', function(e) {
    if (e.target.classList.contains('edit')) {
      const row = e.target.parentElement.parentElement;
      const cells = row.querySelectorAll('td');
      editCveIdInput.value = cells[0].textContent;
      editSeverityInput.value = cells[1].textContent;
      editCvssInput.value = cells[2].textContent;
      editAffectedPackagesInput.value = cells[3].textContent;
      editCweIdInput.value = cells[4].textContent;
      editCveModal.style.display = 'block';
      
    }
    
  });

  // Save edited CVE record
  editCveForm.addEventListener('submit', function(e) {
    e.preventDefault();

    // Update table row with edited values
    const cveIdToEdit = editCveIdInput.value;
    const rows = cveTableBody.querySelectorAll('tr');

    for (const row of rows) {
      const cveIdCell = row.querySelector('td:first-child');
      
      if (cveIdCell && cveIdCell.textContent === cveIdToEdit) {
        const cells = row.querySelectorAll('td');
        cells[1].textContent = editSeverityInput.value;
        cells[2].textContent = editCvssInput.value;
        cells[3].textContent = editAffectedPackagesInput.value;
        cells[4].textContent = editCweIdInput.value;
        editCveModal.style.display = 'none';

        // Save to localStorage after editing
        const existingRecords = loadCveRecords();
        const updatedRecords = existingRecords.map(record => {
          if (record.cveId === cveIdToEdit) {
            return { cveId: cveIdToEdit, severity: editSeverityInput.value, cvss: editCvssInput.value, affectedPackages: editAffectedPackagesInput.value, cweId: editCweIdInput.value };
          }
          return record;
        });
        saveCveRecords(updatedRecords);
        break; // Stop the loop once the row is found and updated
      }
    }
  });

  // Load CVE records from localStorage on page load
  const initialRecords = loadCveRecords();
  for (const record of initialRecords) {
    appendAndSaveCveRecord(record);
  }
});